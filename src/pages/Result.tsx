import React, { useState, useEffect } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { testService, careerService } from '../services/services';
import { TestResult, Career } from '../types';

const Result: React.FC = () => {
  const [result, setResult] = useState<TestResult | null>(null);
  const [careers, setCareers] = useState<Career[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();

  useEffect(() => {
    if (!id) {
        setError("Result ID is missing");
        setLoading(false);
        return;
    }

    const loadResult = async () => {
        try {
          const data: TestResult = await testService.getResultById(id);

          if (!data || !data.riasecCode) {
            setError("Result not found");
            setLoading(false);
            return;
          }

          setResult(data);

          // L·∫•y career theo riasecCode
          if (data.riasecCode) {
            const careersData: Career[] = await careerService.getCareersByCode(data.riasecCode);
            setCareers(careersData);
          }
        } catch (err) {
          console.error('Error loading result:', err);
          setError("Failed to load test result");
        } finally {
          setLoading(false);
        }
    };

    loadResult();
  }, [id]);


  const getCategoryName = (code: string) => {
    const names: Record<string, string> = {
      R: 'Realistic',
      I: 'Investigative',
      A: 'Artistic',
      S: 'Social',
      E: 'Enterprising',
      C: 'Conventional'
    };
    return names[code] || code;
  };

  const getCategoryDescription = (code: string) => {
    const desc: Record<string, string> = {
      R: 'Practical, hands-on, mechanical',
      I: 'Analytical, scientific, intellectual',
      A: 'Creative, expressive, original',
      S: 'Helpful, cooperative, caring',
      E: 'Leadership, persuasive, ambitious',
      C: 'Organized, detail-oriented, structured'
    };
    return desc[code] || '';
  };

  if (loading) return <div className="container"><h2>Loading...</h2></div>;
  if (error) return <div className="container text-center"><h2>{error}</h2></div>;

  if (!result) {
    return (
      <div className="container text-center">
        <h2>No result found</h2>
        <button className="btn" onClick={() => navigate('/quiz')}>Take Quiz</button>
      </div>
    );
  }
  const getWorkEnvironment = (code: string): string => {
    const environments: Record<string, string> = {
      'R': 'L√†m vi·ªác th·ª±c h√†nh v·ªõi c√¥ng c·ª•, m√°y m√≥c ho·∫∑c m√¥i tr∆∞·ªùng ngo√†i tr·ªùi. Coi tr·ªçng k·∫øt qu·∫£ th·ª±c t·∫ø v√† ho·∫°t ƒë·ªông th·ªÉ ch·∫•t.',
      'I': 'Ph√≤ng th√≠ nghi·ªám, m√¥i tr∆∞·ªùng h·ªçc thu·∫≠t ho·∫∑c vai tr√≤ ph√¢n t√≠ch. ∆Øa th√≠ch l√†m vi·ªác ƒë·ªôc l·∫≠p v√† th√°ch th·ª©c tr√≠ tu·ªá.',
      'A': 'Studio s√°ng t·∫°o, nh√† h√°t, c√¥ng ty thi·∫øt k·∫ø. Coi tr·ªçng s·ª± t·ª± do th·ªÉ hi·ªán v√† t∆∞ duy ƒë·ªïi m·ªõi.',
      'S': 'ChƒÉm s√≥c s·ª©c kh·ªèe, gi√°o d·ª•c, trung t√¢m t∆∞ v·∫•n. Th√≠ch m√¥i tr∆∞·ªùng h·ª£p t√°c t·∫≠p trung v√†o gi√∫p ƒë·ª° ng∆∞·ªùi kh√°c.',
      'E': 'VƒÉn ph√≤ng kinh doanh, s√†n b√°n h√†ng, v·ªã tr√≠ l√£nh ƒë·∫°o. Ph√°t tri·ªÉn trong m√¥i tr∆∞·ªùng c·∫°nh tranh, h∆∞·ªõng ƒë·∫øn m·ª•c ti√™u.',
      'C': 'VƒÉn ph√≤ng v·ªõi nhi·ªám v·ª• c√≥ c·∫•u tr√∫c, qu·∫£n l√Ω d·ªØ li·ªáu, vai tr√≤ h√†nh ch√≠nh. ƒê√°nh gi√° cao quy tr√¨nh r√µ r√†ng v√† t·ªï ch·ª©c.'
    };
    return environments[code] || 'M√¥i tr∆∞·ªùng l√†m vi·ªác ƒëa d·∫°ng t√πy thu·ªôc v√†o vai tr√≤ c·ª• th·ªÉ.';
  };

  const getCareerPaths = (code: string): string[] => {
    const careers: Record<string, string[]> = {
      'R': ['K·ªπ s∆∞', 'Th·ª£ c∆° kh√≠', 'Th·ª£ ƒëi·ªán', 'Th·ª£ m·ªôc', 'Phi c√¥ng', 'N√¥ng d√¢n', 'ƒê·∫ßu b·∫øp'],
      'I': ['Nh√† khoa h·ªçc', 'Nh√† nghi√™n c·ª©u', 'Chuy√™n vi√™n ph√¢n t√≠ch', 'Nh√† to√°n h·ªçc', 'L·∫≠p tr√¨nh vi√™n', 'D∆∞·ª£c sƒ©', 'Ki·∫øn tr√∫c s∆∞'],
      'A': ['Ngh·ªá sƒ©', 'Nh√† thi·∫øt k·∫ø', 'Nh√† vƒÉn', 'Nh·∫°c sƒ©', 'Di·ªÖn vi√™n', 'Nhi·∫øp ·∫£nh gia', 'Gi√°m ƒë·ªëc ngh·ªá thu·∫≠t'],
      'S': ['Gi√°o vi√™n', 'Y t√°', 'C·ªë v·∫•n', 'Nh√¢n vi√™n x√£ h·ªôi', 'Nh√† tr·ªã li·ªáu', 'Qu·∫£n l√Ω nh√¢n s·ª±', 'Hu·∫•n luy·ªán vi√™n'],
      'E': ['Qu·∫£n l√Ω', 'Nh√¢n vi√™n b√°n h√†ng', 'Doanh nh√¢n', 'Lu·∫≠t s∆∞', 'Gi√°m ƒë·ªëc Marketing', 'Ch√≠nh tr·ªã gia'],
      'C': ['K·∫ø to√°n', 'Ki·ªÉm to√°n vi√™n', 'Th∆∞ k√Ω', 'Chuy√™n vi√™n ph√¢n t√≠ch d·ªØ li·ªáu', 'Th·ªß th∆∞', 'Giao d·ªãch vi√™n ng√¢n h√†ng', 'Thanh tra']
    };
    return careers[code] || [];
  };

  const getCategoryDescriptionTV = (code: string) => {
    const desc: Record<string, string> = {
      R: '- Th·ª±c t·∫ø, h√†nh ƒë·ªông, th√≠ch ‚Äúl√†m‚Äù h∆°n ‚Äún√≥i‚Äù.\n- T∆∞ duy c·ª• th·ªÉ, quan s√°t t·ªët, ph·∫£n ·ª©ng nhanh v·ªõi t√¨nh hu·ªëng th·ª±c ti·ªÖn.\n- Th√≠ch d√πng c√¥ng c·ª•, m√°y m√≥c, thao t√°c b·∫±ng tay ch√¢n.\n- Ki√™n nh·∫´n, b·ªÅn b·ªâ, c√≥ t√≠nh k·ª∑ lu·∫≠t v√† tr·∫≠t t·ª±.\n- Th∆∞·ªùng √≠t n√≥i, khi√™m t·ªën, nh∆∞ng ƒë√°ng tin c·∫≠y. Kh√¥ng th√≠ch c√¥ng vi·ªác tr·ª´u t∆∞·ª£ng, l√Ω thuy·∫øt hay giao ti·∫øp qu√° nhi·ªÅu.',
      I: '- T√≤ m√≤, ham h·ªçc h·ªèi, th√≠ch ƒë·∫∑t c√¢u h·ªèi ‚ÄúT·∫°i sao?‚Äù, ‚ÄúNh∆∞ th·∫ø n√†o?‚Äù.\n- H∆∞·ªõng n·ªôi, th√≠ch l√†m vi·ªác ƒë·ªôc l·∫≠p.\n- T∆∞ duy logic, ph√¢n t√≠ch, c√≥ kh·∫£ nƒÉng suy lu·∫≠n v√† ph·∫£n bi·ªán t·ªët.\n- Th√≠ch kh√°m ph√°, ph√¢n t√≠ch d·ªØ li·ªáu, ƒë·ªçc ‚Äì vi·∫øt ‚Äì nghi√™n c·ª©u. C√≥ xu h∆∞·ªõng c·∫ßu to√†n v√† y√™u th√≠ch tri th·ª©c.\n- Th∆∞·ªùng d√® d·∫∑t, √≠t th·ªÉ hi·ªán c·∫£m x√∫c, nh∆∞ng s√¢u s·∫Øc.',
      A: '- Gi√†u c·∫£m x√∫c, t∆∞·ªüng t∆∞·ª£ng phong ph√∫, th√≠ch t·ª± do.\n- Tr·ª±c gi√°c m·∫°nh, nh·∫°y c·∫£m v·ªõi c√°i ƒë·∫πp, √¢m thanh, ng√¥n ng·ªØ.\n- Kh√¥ng th√≠ch quy t·∫Øc g√≤ b√≥; d·ªÖ ‚Äúbay b·ªïng‚Äù trong √Ω t∆∞·ªüng.\n- D·ªÖ x√∫c ƒë·ªông, ƒë√¥i khi thay ƒë·ªïi c·∫£m x√∫c nhanh.\n- Th√≠ch th·ªÉ hi·ªán b·∫£n th√¢n v√† kh√°c bi·ªát.',
      S: '- H∆∞·ªõng ngo·∫°i, ·∫•m √°p, d·ªÖ ƒë·ªìng c·∫£m v√† th·∫•u hi·ªÉu ng∆∞·ªùi kh√°c.\n- Th√≠ch gi√∫p ƒë·ª°, gi·∫£ng d·∫°y, chia s·∫ª kinh nghi·ªám.\n- Giao ti·∫øp t·ªët, d·ªÖ t·∫°o s·ª± tin t∆∞·ªüng.\n- Th√≠ch l√†m vi·ªác nh√≥m, kh√¥ng th√≠ch c·∫°nh tranh gay g·∫Øt.\n- Nh·∫°y b√©n v·ªõi c·∫£m x√∫c ng∆∞·ªùi kh√°c, c√≥ kh·∫£ nƒÉng ‚Äúƒë·ªçc‚Äù t√¢m l√Ω t·ªët.',
      E: '- T·ª± tin, nƒÉng ƒë·ªông, th√≠ch ·∫£nh h∆∞·ªüng v√† thuy·∫øt ph·ª•c ng∆∞·ªùi kh√°c.\n- H∆∞·ªõng ngo·∫°i, nhi·ªát huy·∫øt, th√≠ch c·∫°nh tranh v√† th√†nh t√≠ch.\n- Quy·∫øt ƒëo√°n, m·∫°o hi·ªÉm, kh√¥ng ng·∫°i th·ª≠ th√°ch.\n- C√≥ kh·∫£ nƒÉng t·ªï ch·ª©c, l√£nh ƒë·∫°o, ƒë∆∞a ra t·∫ßm nh√¨n.\n- Th∆∞·ªùng h∆∞·ªõng t·ªõi quy·ªÅn l·ª±c, v·ªã th·∫ø, v√† th√†nh c√¥ng v·∫≠t ch·∫•t.',
      C: '- T·ªâ m·ªâ, c·∫©n th·∫≠n, trung th·ª±c v√† ƒë√°ng tin c·∫≠y.\n- Th√≠ch quy t·∫Øc, tr√¨nh t·ª±, l√†m vi·ªác c√≥ k·∫ø ho·∫°ch r√µ r√†ng.\n- Kh√¥ng th√≠ch r·ªßi ro hay m∆° h·ªì; th√≠ch s·ª± ·ªïn ƒë·ªãnh.\n- Gi·ªèi qu·∫£n l√Ω th√¥ng tin, d·ªØ li·ªáu, h·ªì s∆°.\n- T√¥n tr·ªçng quy·ªÅn h·∫°n v√† quy tr√¨nh.'
    };
    return desc[code] || '';
  };

  return (
    <div className="container" style={{ paddingTop: '2rem', paddingBottom: '3rem' , paddingLeft: '1rem', paddingRight: '1rem'}}>
      <div className="card text-center mb-4" style={{
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        color: 'white',
        padding: '3rem 2rem',
        borderRadius: '20px',
        boxShadow: '0 10px 30px rgba(102, 126, 234, 0.3)',
        border: 'none'
      }}>
        <h1 style={{ 
          color: 'white', 
          fontSize: '2.5rem', 
          fontWeight: 'bold',
          marginBottom: '1rem',
          textShadow: '0 2px 4px rgba(0,0,0,0.1)'
        }}>
          K·∫øt qu·∫£ ƒë√°nh gi√° ngh·ªÅ nghi·ªáp c·ªßa b·∫°n
        </h1>
        <p style={{ 
          fontSize: '1.2rem', 
          color: 'rgba(255,255,255,0.9)', 
          marginTop: '1rem',
          marginBottom: '1.5rem'
        }}>
          D·ª±a tr√™n c√¢u tr·∫£ l·ªùi c·ªßa b·∫°n, lo·∫°i t√≠nh c√°ch h√†ng ƒë·∫ßu c·ªßa b·∫°n l√†:
        </p>
        <div style={{
          background: 'white',
          display: 'inline-block',
          padding: '1.5rem 3rem',
          borderRadius: '50px',
          boxShadow: '0 8px 20px rgba(0,0,0,0.15)'
        }}>
          <p style={{ 
            fontSize: '3.5rem', 
            fontWeight: 'bold', 
            color: '#667eea', 
            margin: 0,
            letterSpacing: '0.1em'
          }}>
            {result.riasecCode || 'N/A'}
          </p>
        </div>
      </div>

      {/* RIASEC Profile Card */}
      <div className="card mb-4" style={{
        background: 'white',
        padding: '1.5rem',
        borderRadius: '16px',
        boxShadow: '0 4px 20px rgba(0,0,0,0.08)',
        border: 'none'
      }}>
        <div style={{
          display: 'flex',
          alignItems: 'center',
          marginBottom: '2rem',
          paddingBottom: '1rem',
          borderBottom: '3px solid #f0f0f0'
        }}>
          <span style={{ fontSize: '2.5rem', marginRight: '1rem' }}>üìä</span>
          <h2 style={{ margin: 0, color: '#333', fontSize: '2rem', fontWeight: 'bold' }}>
            H·ªì s∆° RIASEC c·ªßa b·∫°n
          </h2>
        </div>
        {result.details && Object.keys(result.details).length > 0 ? (
          <div style={{ display: 'grid', gap: '1rem' }}>
            {Object.entries(result.details)
              .sort(([,a],[,b]) => b - a)
              .map(([code, score], index) => (
                <div key={code} style={{
                  display:'flex',
                  justifyContent:'space-between',
                  alignItems:'center',
                  padding:'1.5rem',
                  background: index === 0 ? 'linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%)' : '#f8f9fa',
                  borderRadius:'12px',
                  border: index === 0 ? '2px solid #2196f3' : 'none',
                  boxShadow: index === 0 ? '0 4px 12px rgba(33, 150, 243, 0.2)' : 'none',
                  transition: 'transform 0.2s ease',
                  cursor: 'pointer'
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateX(5px)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateX(0)';
                }}>
                  <div style={{ flex: 1 }}>
                    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '0.5rem' }}>
                      {index === 0 && <span style={{ marginRight: '0.5rem' }}>‚≠ê</span>}
                      <strong style={{ fontSize: '1.2rem', color: '#333' }}>
                        {getCategoryName(code)} ({code})
                      </strong>
                    </div>
                    <div style={{ fontSize:'0.95rem', color:'#666', lineHeight: '1.5' }}>
                      {getCategoryDescription(code)}
                    </div>
                  </div>
                  <div style={{
                    minWidth: '80px',
                    textAlign: 'center',
                    marginLeft: '1rem'
                  }}>
                    <div style={{ 
                      fontSize:'2rem', 
                      fontWeight:'bold', 
                      color: index === 0 ? '#2196f3' : '#007bff'
                    }}>
                      {score || 0}%
                    </div>
                    <div style={{
                      width: '100%',
                      height: '8px',
                      background: '#e0e0e0',
                      borderRadius: '10px',
                      marginTop: '0.5rem',
                      overflow: 'hidden'
                    }}>
                      <div style={{
                        width: `${score || 0}%`,
                        height: '100%',
                        background: index === 0 ? 'linear-gradient(90deg, #2196f3, #64b5f6)' : 'linear-gradient(90deg, #007bff, #4dabf7)',
                        borderRadius: '10px',
                        transition: 'width 0.5s ease'
                      }}></div>
                    </div>
                  </div>
                </div>
            ))}
          </div>
        ) : (
          <p style={{ color:'#666', textAlign: 'center', fontSize: '1.1rem' }}>
            Kh√¥ng c√≥ chi ti·∫øt ƒëi·ªÉm s·ªë kh·∫£ d·ª•ng.
          </p>
        )}
      </div>

      {/* Career Guidance Card */}
      <div className="card mb-4" style={{ 
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', 
        color: 'white', 
        padding: '1rem',
        borderRadius: '16px',
        boxShadow: '0 8px 25px rgba(102, 126, 234, 0.3)',
        border: 'none'
      }}>
        <div style={{
          display: 'flex',
          alignItems: 'center',
          marginBottom: '2rem'
        }}>
          <h2 style={{ 
            margin: 0,
            textAlign: 'center',
            color: 'white', 
            fontSize: '2rem', 
            fontWeight: 'bold',
            textShadow: '0 2px 4px rgba(0,0,0,0.1)'
          }}>
            H∆∞·ªõng d·∫´n ngh·ªÅ nghi·ªáp cho k·∫øt qu·∫£ c·ªßa b·∫°n
          </h2>
        </div>
        {result.riasecCode ? (
          <div style={{ display: 'grid', gap: '1.5rem' }}>
            {result.riasecCode.split('').map((code, index) => (
              <div key={index} style={{
                padding: '1.2rem',
                background: 'white',
                borderRadius: '16px',
                boxShadow: index === 0 ? '0 10px 30px rgba(0,0,0,0.2)' : '0 6px 15px rgba(0,0,0,0.1)',
                border: index === 0 ? '3px solid #ffd700' : 'none',
                position: 'relative',
                overflow: 'hidden',
                transition: 'transform 0.3s ease, box-shadow 0.3s ease'
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = 'scale(1.02)';
                e.currentTarget.style.boxShadow = '0 15px 40px rgba(0,0,0,0.2)';
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = 'scale(1)';
                e.currentTarget.style.boxShadow = index === 0 ? '0 10px 30px rgba(0,0,0,0.2)' : '0 6px 15px rgba(0,0,0,0.1)';
              }}>
                {index === 0 && (
                  <div style={{
                    position: 'absolute',
                    top: '0',
                    right: '0',
                    background: 'linear-gradient(135deg, #ffd700 0%, #ffed4e 100%)',
                    color: '#333',
                    padding: '0.75rem 1.5rem',
                    borderBottomLeftRadius: '16px',
                    fontSize: '0.9rem',
                    fontWeight: 'bold',
                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)'
                  }}>
                    ‚≠ê K·∫øt qu·∫£ ch√≠nh
                  </div>
                )}
                
                <div style={{
                  display: 'flex',
                  alignItems: 'center',
                  marginBottom: '1.5rem',
                  paddingTop: index === 0 ? '0.5rem' : '0'
                }}>
                  <div style={{
                    width: '60px',
                    height: '60px',
                    borderRadius: '50%',
                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    color: 'white',
                    fontSize: '1.8rem',
                    fontWeight: 'bold',
                    marginRight: '1.5rem',
                    flexShrink: 0,
                    boxShadow: '0 4px 12px rgba(102, 126, 234, 0.4)'
                  }}>
                    {code}
                  </div>
                  <h3 style={{ 
                    color: '#333', 
                    margin: 0,
                    fontSize: '1.8rem',
                    fontWeight: 'bold'
                  }}>
                    {getCategoryName(code)}
                  </h3>
                </div>

                <div style={{ 
                  marginBottom: '1.5rem',
                  padding: '1.5rem',
                  background: '#f8f9fa',
                  borderRadius: '12px',
                  borderLeft: '4px solid #667eea'
                }}>
                  <div style={{
                    display: 'flex',
                    alignItems: 'center',
                    marginBottom: '0.75rem'
                  }}>
                    <span style={{ fontSize: '1.5rem', marginRight: '0.75rem' }}>üë§</span>
                    <strong style={{ color: '#333', fontSize: '1.15rem' }}>ƒê·∫∑c ƒëi·ªÉm t√≠nh c√°ch</strong>
                  </div>
                  <p style={{ color: '#555', margin: 0, lineHeight: '1.7', fontSize: '1rem', whiteSpace: 'pre-line' }}>
                    {getCategoryDescriptionTV(code)}
                  </p>
                </div>

                <div style={{ 
                  marginBottom: '1.5rem',
                  padding: '1.5rem',
                  background: '#f8f9fa',
                  borderRadius: '12px',
                  borderLeft: '4px solid #764ba2'
                }}>
                  <div style={{
                    display: 'flex',
                    alignItems: 'center',
                    marginBottom: '0.75rem'
                  }}>
                    <span style={{ fontSize: '1.5rem', marginRight: '0.75rem' }}>üè¢</span>
                    <strong style={{ color: '#333', fontSize: '1.15rem' }}>M√¥i tr∆∞·ªùng l√†m vi·ªác l√Ω t∆∞·ªüng</strong>
                  </div>
                  <p style={{ color: '#555', margin: 0, lineHeight: '1.7', fontSize: '1rem' }}>
                    {getWorkEnvironment(code)}
                  </p>
                </div>

                <div style={{
                  padding: '1.5rem',
                  background: '#f8f9fa',
                  borderRadius: '12px',
                  borderLeft: '4px solid #667eea'
                }}>
                  <div style={{
                    display: 'flex',
                    alignItems: 'center',
                    marginBottom: '1rem'
                  }}>
                    <span style={{ fontSize: '1.5rem', marginRight: '0.75rem' }}>üíº</span>
                    <strong style={{ color: '#333', fontSize: '1.15rem' }}>Con ƒë∆∞·ªùng s·ª± nghi·ªáp ƒëi·ªÉn h√¨nh</strong>
                  </div>
                  <div style={{ display: 'flex', flexWrap: 'wrap', gap: '0.75rem' }}>
                    {getCareerPaths(code).map((career, i) => (
                      <span key={i} style={{
                        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                        color: 'white',
                        padding: '0.75rem 1.5rem',
                        borderRadius: '30px',
                        fontSize: '1rem',
                        fontWeight: '500',
                        boxShadow: '0 4px 12px rgba(102, 126, 234, 0.3)',
                        transition: 'all 0.2s ease',
                        cursor: 'pointer'
                      }}
                      onMouseEnter={(e) => {
                        e.currentTarget.style.transform = 'translateY(-3px)';
                        e.currentTarget.style.boxShadow = '0 6px 16px rgba(102, 126, 234, 0.4)';
                      }}
                      onMouseLeave={(e) => {
                        e.currentTarget.style.transform = 'translateY(0)';
                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(102, 126, 234, 0.3)';
                      }}>
                        {career}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div style={{ 
            textAlign: 'center', 
            padding: '3rem',
            background: 'rgba(255,255,255,0.1)',
            borderRadius: '12px'
          }}>
            <span style={{ fontSize: '3rem', marginBottom: '1rem', display: 'block' }}>ü§î</span>
            <p style={{ color: 'white', fontSize: '1.2rem', margin: 0 }}>
              Kh√¥ng c√≥ th√¥ng tin h∆∞·ªõng nghi·ªáp kh·∫£ d·ª•ng.
            </p>
          </div>
        )}
      </div>

      {/* Recommended Careers Card */}
      {careers.length > 0 && (
        <div className="card mb-4" style={{ 
          background: 'white', 
          padding: '2.5rem',
          borderRadius: '16px',
          boxShadow: '0 6px 20px rgba(0,0,0,0.08)',
          border: 'none'
        }}>
          <div style={{ 
            display: 'flex', 
            alignItems: 'center', 
            marginBottom: '2rem',
            paddingBottom: '1.5rem',
            borderBottom: '3px solid #f0f0f0'
          }}>
            <span style={{ fontSize: '2.5rem', marginRight: '1rem' }}>üéì</span>
            <h2 style={{ margin: 0, color: '#333', fontSize: '2rem', fontWeight: 'bold' }}>
              Ngh·ªÅ nghi·ªáp ƒë∆∞·ª£c ƒë·ªÅ xu·∫•t
            </h2>
          </div>
          <div style={{ display:'grid', gap:'1.5rem' }}>
            {careers.map((c, idx) => (
              <div key={c._id} style={{ 
                padding:'2rem', 
                borderRadius:'16px', 
                background: idx % 2 === 0 
                  ? 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)' 
                  : 'linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%)',
                boxShadow: '0 6px 15px rgba(0,0,0,0.08)',
                transition: 'all 0.3s ease',
                cursor: 'pointer',
                border: '2px solid transparent'
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = 'translateY(-8px)';
                e.currentTarget.style.boxShadow = '0 12px 30px rgba(0,0,0,0.15)';
                e.currentTarget.style.borderColor = idx % 2 === 0 ? '#667eea' : '#e0c3fc';
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = 'translateY(0)';
                e.currentTarget.style.boxShadow = '0 6px 15px rgba(0,0,0,0.08)';
                e.currentTarget.style.borderColor = 'transparent';
              }}>
                <div style={{ display: 'flex', alignItems: 'center', marginBottom: '1rem' }}>
                  <div style={{
                    width: '50px',
                    height: '50px',
                    borderRadius: '50%',
                    background: 'white',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    marginRight: '1.25rem',
                    fontSize: '1.8rem',
                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)'
                  }}>
                    üí°
                  </div>
                  <h3 style={{ 
                    color:'#333', 
                    margin: 0, 
                    fontSize: '1.6rem', 
                    fontWeight: 'bold'
                  }}>
                    {c.name}
                  </h3>
                </div>
                {c.description && (
                  <p style={{ 
                    color:'#555', 
                    lineHeight: '1.7', 
                    marginBottom: '1.5rem',
                    fontSize: '1.05rem',
                    paddingLeft: '1rem',
                    borderLeft: '3px solid rgba(0,0,0,0.1)'
                  }}>
                    {c.description}
                  </p>
                )}
                {c.skills && c.skills.length > 0 && (
                  <div>
                    <strong style={{ 
                      color: '#333', 
                      marginBottom: '0.75rem', 
                      display: 'flex',
                      alignItems: 'center',
                      fontSize: '1.1rem'
                    }}>
                      <span style={{ marginRight: '0.5rem' }}>üõ†Ô∏è</span>
                      K·ªπ nƒÉng c·∫ßn thi·∫øt:
                    </strong>
                    <div style={{ display:'flex', flexWrap:'wrap', gap:'0.75rem' }}>
                      {c.skills.map((skill,i)=>(
                        <span key={i} style={{ 
                          background:'white', 
                          padding:'0.65rem 1.25rem', 
                          borderRadius:'25px', 
                          fontSize:'0.95rem',
                          color: '#333',
                          fontWeight: '500',
                          boxShadow: '0 3px 8px rgba(0,0,0,0.1)',
                          transition: 'all 0.2s ease'
                        }}
                        onMouseEnter={(e) => {
                          e.currentTarget.style.transform = 'translateY(-2px)';
                          e.currentTarget.style.boxShadow = '0 5px 12px rgba(0,0,0,0.15)';
                        }}
                        onMouseLeave={(e) => {
                          e.currentTarget.style.transform = 'translateY(0)';
                          e.currentTarget.style.boxShadow = '0 3px 8px rgba(0,0,0,0.1)';
                        }}>
                          {skill}
                        </span>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Action Buttons */}
      <div className="text-center mt-4" style={{ paddingBottom: '2rem' }}>
        <button 
          onClick={()=>navigate('/quiz')} 
          className="btn btn-secondary" 
          style={{ 
            marginRight:'1.5rem',
            padding: '1rem 2.5rem',
            fontSize: '1.15rem',
            borderRadius: '30px',
            border: 'none',
            background: 'linear-gradient(135deg, #6c757d 0%, #495057 100%)',
            color: 'white',
            fontWeight: '600',
            boxShadow: '0 6px 15px rgba(108, 117, 125, 0.3)',
            transition: 'all 0.3s ease',
            cursor: 'pointer'
          }}
          onMouseEnter={(e) => {
            e.currentTarget.style.transform = 'translateY(-3px)';
            e.currentTarget.style.boxShadow = '0 8px 20px rgba(108, 117, 125, 0.4)';
          }}
          onMouseLeave={(e) => {
            e.currentTarget.style.transform = 'translateY(0)';
            e.currentTarget.style.boxShadow = '0 6px 15px rgba(108, 117, 125, 0.3)';
          }}>
          L√†m l·∫°i b√†i test
        </button>
        <button 
          onClick={()=>navigate('/')} 
          className="btn"
          style={{
            marginRight:'1.75rem',
            marginTop: '20px',
            padding: '1rem 2.5rem',
            fontSize: '1.15rem',
            borderRadius: '30px',
            border: 'none',
            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            color: 'white',
            fontWeight: '600',
            boxShadow: '0 6px 15px rgba(102, 126, 234, 0.3)',
            transition: 'all 0.3s ease',
            cursor: 'pointer'
          }}
          onMouseEnter={(e) => {
            e.currentTarget.style.transform = 'translateY(-3px)';
            e.currentTarget.style.boxShadow = '0 8px 20px rgba(102, 126, 234, 0.4)';
          }}
          onMouseLeave={(e) => {
            e.currentTarget.style.transform = 'translateY(0)';
            e.currentTarget.style.boxShadow = '0 6px 15px rgba(102, 126, 234, 0.3)';
          }}>
          V·ªÅ trang ch·ªß
        </button>
      </div>
    </div>
  );
};

export default Result;